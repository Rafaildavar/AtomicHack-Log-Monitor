import { motion } from 'framer-motion';
import { Award, Users, Zap, Code, Github, Linkedin } from 'lucide-react';

export default function About() {
  return (
    <div className="min-h-screen pt-24 pb-12 px-4">
      <div className="container mx-auto max-w-6xl">
        {/* Header */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-16"
        >
          <h1 className="text-5xl md:text-6xl font-bold text-white mb-6">
            –û –ø—Ä–æ–µ–∫—Ç–µ
          </h1>
          <p className="text-xl text-gray-400 max-w-3xl mx-auto">
            AtomicHack Log Monitor - –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ª–æ–≥–æ–≤ –Ω–∞ –±–∞–∑–µ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è
          </p>
        </motion.section>

        {/* Project Story */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="card">
            <h2 className="text-3xl font-bold text-white mb-6">–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞</h2>
            <div className="space-y-6 text-gray-300">
              <p>
                <span className="text-atomic-accent font-semibold">AtomicHack Log Monitor</span> —Ä–æ–¥–∏–ª—Å—è –Ω–∞ —Ö–∞–∫–∞—Ç–æ–Ω–µ 
                <span className="text-atomic-accent font-semibold"> AtomicHack 2025</span> –∫–∞–∫ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏: 
                –±—ã—Å—Ç—Ä–æ–≥–æ –∏ —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –±–æ–ª—å—à–∏—Ö –æ–±—ä—ë–º–æ–≤ –ª–æ–≥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–∞—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.
              </p>
              <p>
                –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–ª—É –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—è–≤–ª–µ–Ω–∏—è 
                –∞–Ω–æ–º–∞–ª–∏–π –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –≤ –ª–æ–≥–∞—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
              </p>
              <p>
                –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–∞–∫ –º–æ–¥—É–ª—å–Ω–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ —Å —Ç—Ä–µ–º—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞:
              </p>
            </div>
          </div>
        </motion.section>

        {/* Architecture */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–µ—à–µ–Ω–∏—è</h2>
            <p className="text-gray-400">–¢—Ä–∏ —Å–ø–æ—Å–æ–±–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è - –æ–¥–Ω–∞ –º–æ—â–Ω–∞—è –ª–æ–≥–∏–∫–∞</p>
          </div>

          <div className="grid md:grid-cols-3 gap-6">
            {[
              {
                title: 'ü§ñ Telegram Bot',
                desc: '–ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä—è–º–æ –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ',
                features: ['–ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ–≥–æ–≤', '–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑', '–≠–∫—Å–ø–æ—Ä—Ç Excel']
              },
              {
                title: '‚öôÔ∏è REST API',
                desc: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ –ª—é–±—ã–µ —Å–∏—Å—Ç–µ–º—ã',
                features: ['HTTP API', 'JSON responses', 'Swagger docs']
              },
              {
                title: 'üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
                desc: '–£–¥–æ–±–Ω—ã–π UI –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞',
                features: ['Drag & Drop', '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è', '–ò—Å—Ç–æ—Ä–∏—è']
              }
            ].map((item, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: i * 0.1 }}
                className="card"
              >
                <h3 className="text-2xl font-bold text-white mb-2">{item.title}</h3>
                <p className="text-gray-400 mb-4">{item.desc}</p>
                <ul className="space-y-2">
                  {item.features.map((feature, j) => (
                    <li key={j} className="text-sm text-gray-300 flex items-center">
                      <span className="w-1.5 h-1.5 rounded-full bg-atomic-accent mr-2"></span>
                      {feature}
                    </li>
                  ))}
                </ul>
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Technologies */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏</h2>
            <p className="text-gray-400">–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–µ–∫ –¥–ª—è –≤—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞</p>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            {[
              {
                category: 'Machine Learning',
                tech: [
                  { name: 'Sentence Transformers', desc: '–°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ embeddings' },
                  { name: 'PyTorch', desc: '–ì–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è' },
                  { name: 'Scikit-learn', desc: '–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ ML —É—Ç–∏–ª–∏—Ç—ã' }
                ]
              },
              {
                category: 'Backend',
                tech: [
                  { name: 'FastAPI', desc: '–í—ã—Å–æ–∫–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π REST API' },
                  { name: 'Uvicorn', desc: 'ASGI —Å–µ—Ä–≤–µ—Ä –¥–ª—è Python' },
                  { name: 'Pandas', desc: '–ê–Ω–∞–ª–∏–∑ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö' }
                ]
              },
              {
                category: 'Frontend',
                tech: [
                  { name: 'React 18', desc: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UI —Ñ—Ä–µ–π–º–≤–æ—Ä–∫' },
                  { name: 'TypeScript', desc: '–¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JavaScript' },
                  { name: 'TailwindCSS', desc: '–£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π CSS —Ñ—Ä–µ–π–º–≤–æ—Ä–∫' }
                ]
              },
              {
                category: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
                tech: [
                  { name: 'Aiogram 3', desc: 'Telegram Bot API' },
                  { name: 'Docker', desc: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤' },
                  { name: 'GitHub Actions', desc: 'CI/CD pipeline' }
                ]
              }
            ].map((section, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, x: i % 2 === 0 ? -20 : 20 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ delay: i * 0.1 }}
                className="card"
              >
                <h3 className="text-xl font-bold text-atomic-accent mb-4">{section.category}</h3>
                <div className="space-y-3">
                  {section.tech.map((item, j) => (
                    <div key={j} className="border-b border-gray-700 pb-3 last:border-0">
                      <p className="font-semibold text-white">{item.name}</p>
                      <p className="text-sm text-gray-400">{item.desc}</p>
                    </div>
                  ))}
                </div>
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Achievements */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h2>
          </div>

          <div className="grid md:grid-cols-4 gap-6">
            {[
              { icon: 'üèÜ', title: '4-–µ –º–µ—Å—Ç–æ', desc: 'AtomicHack Hackathon 2025' },
              { icon: '‚ö°', title: '<5 —Å–µ–∫', desc: '–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞' },
              { icon: 'üéØ', title: '90%', desc: '–¢–æ—á–Ω–æ—Å—Ç—å' },
              { icon: 'üì¶', title: '500+', desc: '–¢–∏–ø–æ–≤ –∞–Ω–æ–º–∞–ª–∏–π' }
            ].map((item, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: i * 0.1 }}
                className="card text-center"
              >
                <div className="text-4xl mb-3">{item.icon}</div>
                <h3 className="text-xl font-bold text-white mb-1">{item.title}</h3>
                <p className="text-sm text-gray-400">{item.desc}</p>
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Key Features */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">–ö–ª—é—á–µ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏</h2>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            {[
              {
                icon: Zap,
                title: '–†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è',
                desc: '–ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π'
              },
              {
                icon: Award,
                title: '–í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å',
                desc: 'ML-–º–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ –Ω–∞ —Ç—ã—Å—è—á–∞—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏'
              },
              {
                icon: Code,
                title: 'API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è',
                desc: 'REST API –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞'
              },
              {
                icon: Users,
                title: '–ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å',
                desc: '–ú–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ–≥—Ä–æ–º–Ω—ã–µ –æ–±—ä–µ–º—ã –ª–æ–≥–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ'
              }
            ].map((item, i) => {
              const Icon = item.icon;
              return (
                <motion.div
                  key={i}
                  initial={{ opacity: 0, x: i % 2 === 0 ? -20 : 20 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ delay: i * 0.1 }}
                  className="card group hover:border-atomic-blue/50 transition-all"
                >
                  <div className="w-12 h-12 rounded-lg bg-atomic-blue/20 flex items-center justify-center mb-4 group-hover:bg-atomic-blue/30 transition-all">
                    <Icon className="w-6 h-6 text-atomic-accent" />
                  </div>
                  <h3 className="text-lg font-bold text-white mb-2">{item.title}</h3>
                  <p className="text-gray-400">{item.desc}</p>
                </motion.div>
              );
            })}
          </div>
        </motion.section>

        {/* Team */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-white mb-4">–ö–æ–º–∞–Ω–¥–∞ Black Lotus üå∏</h2>
            <p className="text-gray-400">–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏, ML-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –∏ –¥–∏–∑–∞–π–Ω–µ—Ä—ã</p>
          </div>

          <div className="grid md:grid-cols-3 gap-6">
            {[
              {
                name: 'ML & Backend',
                role: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —è–¥—Ä–∞ —Å–∏—Å—Ç–µ–º—ã',
                skills: ['Python', 'FastAPI', 'ML', 'Docker']
              },
              {
                name: 'Frontend & UX',
                role: '–í–µ–± –∏ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å',
                skills: ['React', 'TypeScript', 'Design', 'UX']
              },
              {
                name: 'Bot & Integration',
                role: 'Telegram –±–æ—Ç –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
                skills: ['Aiogram', 'API', 'Integration', 'DevOps']
              }
            ].map((member, i) => (
              <motion.div
                key={i}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: i * 0.1 }}
                className="card text-center"
              >
                <div className="w-16 h-16 rounded-full bg-gradient-to-br from-atomic-blue to-atomic-accent mx-auto mb-4 flex items-center justify-center">
                  <Users className="w-8 h-8 text-white" />
                </div>
                <h3 className="text-xl font-bold text-white mb-1">{member.name}</h3>
                <p className="text-atomic-accent text-sm mb-3">{member.role}</p>
                <div className="flex flex-wrap gap-2 justify-center">
                  {member.skills.map((skill, j) => (
                    <span key={j} className="text-xs px-2 py-1 rounded-full bg-atomic-blue/20 text-gray-300">
                      {skill}
                    </span>
                  ))}
                </div>
              </motion.div>
            ))}
          </div>
        </motion.section>

        {/* Open Source */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="mb-20"
        >
          <div className="card bg-gradient-to-r from-atomic-blue/20 to-atomic-accent/20 border-atomic-blue/50 text-center">
            <Github className="w-16 h-16 text-atomic-accent mx-auto mb-4" />
            <h2 className="text-3xl font-bold text-white mb-4">Open Source</h2>
            <p className="text-gray-300 mb-6 max-w-2xl mx-auto">
              –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –º–æ–≥–ª–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ —É–ª—É—á—à–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ
            </p>
            <a
              href="https://github.com/Rafaildavar/AtomicHack-Log-Monitor"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-flex items-center space-x-2 btn-primary"
            >
              <Github className="w-5 h-5" />
              <span>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ GitHub</span>
            </a>
          </div>
        </motion.section>

        {/* Contact */}
        <motion.section
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          className="text-center"
        >
          <h2 className="text-3xl font-bold text-white mb-6">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
          <div className="flex flex-col sm:flex-row items-center justify-center gap-6">
            <a
              href="https://t.me/AtomicHackLogBot"
              target="_blank"
              rel="noopener noreferrer"
              className="btn-primary inline-flex items-center space-x-2"
            >
              <span>üì± Telegram Bot</span>
            </a>
            <a
              href="https://github.com/Rafaildavar/AtomicHack-Log-Monitor"
              target="_blank"
              rel="noopener noreferrer"
              className="btn-secondary inline-flex items-center space-x-2"
            >
              <Github className="w-5 h-5" />
              <span>GitHub</span>
            </a>
          </div>
        </motion.section>
      </div>
    </div>
  );
}
